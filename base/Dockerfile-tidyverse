FROM rocker/tidyverse

#Install Dependencies
RUN apt-get -yq update && \
    apt-get -yq install \
		python3 \
		python3-pip
RUN update-ca-certificates \
    && pip install --upgrade pip setuptools six \
    && pip install --no-cache-dir gevent==21.12.0 flask==2.1.2


#Install required R packages
RUN R -e "install.packages('jsonlite', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('devtools', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('jsonvalidate', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('RCurl', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('httr', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('uuid', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('paws', repos='https://cloud.R-project.org')" && \
    R -e "install.packages('githubinstall', repos='https://cloud.R-project.org')"

#Install FaaSr
RUN R -e "library(devtools); install_github('FaaSr/FaaSr-package',ref='main')"

#==============================================Lambda function & Github Actions
# Install dependencies
RUN apt-get update && \
    apt-get install -y \
        curl \
        unzip \
        g++ \
        make \
        cmake \
        libcurl4-openssl-dev

# Create function directory
RUN mkdir -p /lambda_runtime
RUN mkdir -p /action
# Install the AWS Lambda Runtime Interface Client for Python
RUN pip install \
    --target /lambda_runtime \
        awslambdaric

# Copy FaaSr invocation code
COPY faasr_start_invoke_openwhisk_aws-lambda.R /action
COPY faasr_start_invoke_github-actions.R /action

# Copy Python wrapper
COPY python_wrapper_aws-lambda.py /lambda_runtime/lambda_function.py

# Install the AWS Lambda Runtime Interface Emulator
RUN curl -Lo /usr/bin/aws-lambda-rie https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie && \
    chmod +x /usr/bin/aws-lambda-rie
COPY entrypoint_aws-lambda.sh /lambda_runtime/entry.sh
RUN chmod 755 /lambda_runtime/entry.sh

#==============================================Openwhisk
#Setup port
ENV FLASK_PROXY_PORT 8080

#Copy and make files/directoreis for actionProxy
RUN mkdir -p /actionProxy/owplatform
RUN git clone https://github.com/apache/openwhisk-runtime-docker
RUN cp openwhisk-runtime-docker/core/actionProxy/actionproxy.py /actionProxy
RUN cp openwhisk-runtime-docker/core/actionProxy/owplatform/__init__.py /actionProxy/owplatform
RUN cp openwhisk-runtime-docker/core/actionProxy/owplatform/knative.py /actionProxy/owplatform
RUN cp openwhisk-runtime-docker/core/actionProxy/owplatform/openwhisk.py /actionProxy/owplatform

#Setup basic executable
# Copy FaaSr invocation code
COPY faasr_start_invoke_openwhisk_aws-lambda.R /action/exec
RUN chmod +x /action/exec

#Add json schema
ADD https://raw.githubusercontent.com/FaaSr/FaaSr-package/main/schema/FaaSr.schema.json /action/


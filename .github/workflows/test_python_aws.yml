name: test python AWS

on: 
  workflow_dispatch:
    inputs:
      # BASE_IMAGE is the full user/name:tag of the base FaaSr image (stored in DockerHub) to build from 
      # Examples: janedoe/base-tidyverse:1.1.2, faasr/base-tidyverse:1.1.3
      BASE_IMAGE:
        description: 'user/name:tag of the base FaaSr image e.g. janedoe/base-tidyverse:1.1.2'
        required: true
        default: 'nolcut/faasr-lambda-py:0.1.0'
      TARGET_NAME:
        description: 'name of the FaaS-specific image to build'
        required: true
        default: 'faasr-lambda-py'
      FAASR_VERSION:
        description: 'FaaSr version'
        required: true 
    # AWS_REGION is the AWS ECR region to push image to
      # Examples: us-east-1
      AWS_REGION:
        description: 'AWS ECR region to push image to'
        required: true
        default: 'us-east-1'


permissions: write-all

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Pull from DockerHub
        run: |
          docker pull ${{ github.event.inputs.BASE_IMAGE }}
          docker image tag ${{ github.event.inputs.BASE_IMAGE }} ${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.TARGET_NAME }}:${{ github.event.inputs.FAASR_VERSION }}
      - name: Push aws-lambda image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.TARGET_NAME }}:${{ github.event.inputs.FAASR_VERSION }}
